/* Output del file inputs/input6.txt */

--- Grammatica di partenza --- 
Produzione: S->Aa
Produzione: A->BD
Produzione: B->b
Produzione: B->#
Produzione: D->d
Produzione: D->#

--- Parola da verificare ---
[ b  d  a  $ ]

--- Calcolo First ---
Firsts S [# ,a ,b ,d ,]
Firsts D [# ,d ,]
Firsts B [# ,b ,]
Firsts A [# ,b ,d ,]

--- Calcolo Follow ---
Follow A[a ,]
Follow B[a ,d ,]
Follow D[a ,]
Follow S[$ ,]

--- Tabella di Parsing ---
M[A,a]=A->BD
M[A,b]=A->BD
M[A,d]=A->BD
M[B,a]=B->#
M[B,b]=B->b
M[B,d]=B->#
M[D,a]=D->#
M[D,d]=D->d
M[S,a]=S->Aa
M[S,b]=S->Aa
M[S,d]=S->Aa
M[S,$]=S->Aa

--- Passi di Parsing ---
1:
Nonterminal stack: [ S  $ ]
Input stack: [ b  d  a  $ ]
Esegui la produzione: S->Aa

2:
Nonterminal stack: [ A  a  $ ]
Input stack: [ b  d  a  $ ]
Esegui la produzione: A->BD

3:
Nonterminal stack: [ B  D  a  $ ]
Input stack: [ b  d  a  $ ]
Esegui la produzione: B->b

4:
Nonterminal stack: [ b  D  a  $ ]
Input stack: [ b  d  a  $ ]
Match tra stack dei terminali e non terminali. Esegui il pop di entrambi

5:
Nonterminal stack: [ D  a  $ ]
Input stack: [ d  a  $ ]
Esegui la produzione: D->d

6:
Nonterminal stack: [ d  a  $ ]
Input stack: [ d  a  $ ]
Match tra stack dei terminali e non terminali. Esegui il pop di entrambi

7:
Nonterminal stack: [ a  $ ]
Input stack: [ a  $ ]
Match tra stack dei terminali e non terminali. Esegui il pop di entrambi

--- Risultato --- 
ACCEPT